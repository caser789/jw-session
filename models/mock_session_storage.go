// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/caser789/jw-session/models (interfaces: SessionStorage)

// Package models is a generated GoMock package.
package models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionStorage is a mock of SessionStorage interface.
type MockSessionStorage struct {
	ctrl     *gomock.Controller
	recorder *MockSessionStorageMockRecorder
}

// MockSessionStorageMockRecorder is the mock recorder for MockSessionStorage.
type MockSessionStorageMockRecorder struct {
	mock *MockSessionStorage
}

// NewMockSessionStorage creates a new mock instance.
func NewMockSessionStorage(ctrl *gomock.Controller) *MockSessionStorage {
	mock := &MockSessionStorage{ctrl: ctrl}
	mock.recorder = &MockSessionStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionStorage) EXPECT() *MockSessionStorageMockRecorder {
	return m.recorder
}

// Del mocks base method.
func (m *MockSessionStorage) Del(arg0 string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Del", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// Del indicates an expected call of Del.
func (mr *MockSessionStorageMockRecorder) Del(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Del", reflect.TypeOf((*MockSessionStorage)(nil).Del), arg0)
}

// Get mocks base method.
func (m *MockSessionStorage) Get(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockSessionStorageMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionStorage)(nil).Get), arg0)
}

// SAdd mocks base method.
func (m *MockSessionStorage) SAdd(arg0, arg1 string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SAdd", arg0, arg1)
	ret0, _ := ret[0].(int)
	return ret0
}

// SAdd indicates an expected call of SAdd.
func (mr *MockSessionStorageMockRecorder) SAdd(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SAdd", reflect.TypeOf((*MockSessionStorage)(nil).SAdd), arg0, arg1)
}

// SMembers mocks base method.
func (m *MockSessionStorage) SMembers(arg0 string) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SMembers", arg0)
	ret0, _ := ret[0].([]string)
	return ret0
}

// SMembers indicates an expected call of SMembers.
func (mr *MockSessionStorageMockRecorder) SMembers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SMembers", reflect.TypeOf((*MockSessionStorage)(nil).SMembers), arg0)
}

// Set mocks base method.
func (m *MockSessionStorage) Set(arg0, arg1 string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1)
	ret0, _ := ret[0].(int)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockSessionStorageMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockSessionStorage)(nil).Set), arg0, arg1)
}
